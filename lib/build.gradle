plugins {
    id 'java-test-fixtures'
}

description = 'Java client library for staging calculations'

dependencies {
    spotbugs 'com.github.spotbugs:spotbugs:4.7.3'

    api "com.fasterxml.jackson.core:jackson-core:2.13.4"
    api "com.fasterxml.jackson.core:jackson-annotations:2.13.4"
    api "com.fasterxml.jackson.core:jackson-databind:2.13.4.2"

    implementation "org.cache2k:cache2k-api:2.6.1.Final"
    runtimeOnly "org.cache2k:cache2k-core:2.6.1.Final"

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.ahocorasick:ahocorasick:0.6.3'

    implementation 'org.slf4j:slf4j-api:2.0.3'

    testFixturesImplementation 'com.imsweb:seerapi-client-java:5.3'
    testFixturesImplementation 'org.slf4j:slf4j-simple:2.0.3'
    testFixturesImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testFixturesImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'
}

// run the full CS integration test suite
task csIntegrationTest(type: JavaExec) {
    mainClass.set('com.imsweb.staging.cs.CsIntegrationTest')
    classpath = sourceSets.test.runtimeClasspath
}

// run the full CS integration test suite
task zipAlgorithms(type: JavaExec) {
    mainClass.set('com.imsweb.staging.zip.ZipAlgorithms')
    classpath = sourceSets.test.runtimeClasspath
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'staging-client-java'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Staging Java Client'
                description = 'A cancer staging client library'
                url = 'https://github.com/imsweb/staging-client-java'
                inceptionYear = '2015'

                licenses {
                    license {
                        name = 'A modified BSD License (BSD)'
                        url = 'https://github.com/imsweb/staging-client-java/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'ctmay4'
                        name = 'Chuck May'
                        email = 'mayc@imsweb.com'
                    }
                }

                scm {
                    url = 'https://github.com/imsweb/staging-client-java'
                    connection = 'scm:https://github.com/imsweb/staging-client-java.git'
                    developerConnection = 'scm:git@github.com:imsweb/staging-client-java.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = project.findProperty('nexusUsername') ?: ''
                password = project.findProperty('nexusPassword') ?: ''
            }
        }
    }
}

signing {
    def signingKey = project.findProperty('signingKey') ?: ''
    def signingPassword = project.findProperty('signingPassword') ?: ''

    useInMemoryPgpKeys(signingKey, signingPassword)

    sign publishing.publications.mavenJava
}
