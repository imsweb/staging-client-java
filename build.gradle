plugins {
    id 'java-library'
    id 'checkstyle'
    id "com.github.spotbugs" version "1.6.5"
    id 'com.bmuschko.nexus' version '2.3.1'
    id "io.codearte.nexus-staging" version "0.8.0"  // logs into Sonotype OSS and does a "Close" and "Release"
}

group = 'com.imsweb'
version = '4.5'
description = 'Java client library for staging calculations'

// UTF-8 for all compilation tasks
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// fail the build if there are compiler warnings
tasks.withType(JavaCompile) {
    // UTF-8 for all compilation tasks
    options.encoding = 'UTF-8'

    // set language level
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-serial" << "-Werror"
}

repositories {
    mavenCentral()
}

dependencies {
    api 'com.fasterxml.jackson.core:jackson-core:2.8.10'
    api 'com.fasterxml.jackson.core:jackson-annotations:2.8.10'
    api 'com.fasterxml.jackson.core:jackson-databind:2.8.10'

    // morphia annotations to make it easier to use in SEER*API
    api 'org.mongodb.morphia:morphia:1.3.2'

    implementation "org.cache2k:cache2k-api:1.2.0.Final"
    implementation "org.cache2k:cache2k-core:1.2.0.Final"
    
    implementation 'org.apache.commons:commons-lang3:3.7'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.9.0'
    testImplementation 'org.unitils:unitils-core:3.4.6'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': group,
                'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Automatic-Module-Name': 'com.imsweb.algorithms.staging'
        )
    }
}

test {
    maxHeapSize = "1g"
}

checkstyle {
    configFile = file('config/checkstyle/checkstyle.xml')
}

spotbugs {
    toolVersion = '3.1.8'
    excludeFilter = file('config/spotbugs/spotbugs-exclude.xml')
}

// don't try to release a snapshot to a non-snapshot repository, that won't work anyway
if (version.endsWith('-SNAPSHOT'))
    gradle.startParameter.excludedTaskNames += 'closeAndReleaseRepository'

wrapper {
    gradleVersion = '4.10.2'
    distributionType = Wrapper.DistributionType.ALL
}

modifyPom {
    project {
        name 'Staging Java Client'
        description 'A cancer staging client library'
        url 'https://github.com/imsweb/staging-client-java'
        inceptionYear '2015'

        scm {
            url 'https://github.com/imsweb/staging-client-java'
            connection 'scm:https://github.com/imsweb/staging-client-java.git'
            developerConnection 'scm:git@github.com:imsweb/staging-client-java.git'
        }

        licenses {
            license {
                name 'A modified BSD License (BSD)'
                url 'https://github.com/imsweb/staging-client-java/blob/master/LICENSE'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'ctmay4'
                name 'Chuck May'
                email 'mayc@imsweb.com'
            }
            developer {
                id 'depryf'
                name 'Fabian Depry'
                email 'depryf@imsweb.com'
            }
        }
    }
}
